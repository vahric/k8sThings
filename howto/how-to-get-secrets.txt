
A Secret is an object that contains a small amount of sensitive data such as a password, a token, or a key. Such information might otherwise be put in a Pod specification or in a container image. Using a Secret means that you don't need to include confidential data in your application code.

Because Secrets can be created independently of the Pods that use them, there is less risk of the Secret (and its data) being exposed during the workflow of creating, viewing, and editing Pods. Kubernetes, and applications that run in your cluster, can also take additional precautions with Secrets, such as avoiding writing secret data to nonvolatile storage.


kubectl get secrets

or take it as yaml file 

kubectl get secret -n monitoring prometheus-grafana -o yaml

apiVersion: v1
data:
  admin-password: cHJ-EXAMPLE-vD3
  admin-user: YWR-EXAMPLE-taW4=
  ldap-toml: ""
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: prometheus
    meta.helm.sh/release-namespace: monitoring
  creationTimestamp: "2023-03-03T07:18:48Z"
  labels:
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 9.3.8
    helm.sh/chart: grafana-6.51.2
  name: prometheus-grafana
  namespace: monitoring
  resourceVersion: "1323502"
  uid: 79510f72-e9df-4a5e-87c9-5bd0452a6d81
type: Opaque


Dont forget decode things ...

echo admin-user | base64 --decode  
echo admin-password | base64 --decode

Link : https://kubernetes.io/docs/concepts/configuration/secret/
